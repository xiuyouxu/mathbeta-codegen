package ${basePackageName}.restful;

import com.mes.common.framework.rest.impl.BaseRestServerInterfaceImpl;
import com.mes.dubbo.consumer.ControlConsumer;
import com.mes.utils.RestConstants;
import io.swagger.annotations.Api;

import javax.ws.rs.*;
import javax.ws.rs.core.MediaType;
#set($entityName="#getEntityName($table.name,true,$tableNamePrefix)")
/**
 * $table.description
 * Created by xiuyou.xu on #getCurrentDate().
 */
@Api(value = "$table.description", description = "$table.description"/*, authorizations = {@Authorization(value = "mesoauth", scopes = {@AuthorizationScope(scope = "$entityName.toLowerCase()", description = "$table.description")})}*/)
@Path(RestConstants.RestPathPrefix.$entityName.toUpperCase())
public class ${entityName}RestServer extends BaseRestServerInterfaceImpl<${entityName}> {
    @Override
    public I${entityName}Provider getDubboBaseInterface() {
        return ControlConsumer.get${entityName}Provider();
    }

    @GET
    @Path("/getTemplate")
    @Produces(MediaType.APPLICATION_JSON)
    public jsonView getTemplate(@QueryParam("param") String param) {
        try {
            Object ret = getDubboBaseInterface().getTemplate(param);
            jsonView.success(ret);
        } catch (Exception e) {
            e.printStackTrace();
            jsonView.fail(e.getMessage());
        }
        return jsonView;
    }

    @POST
    @Path("/postTemplate")
//  @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public jsonView postTemplate(@FormParam("param") String param) {
        try {
            Object ret = getDubboBaseInterface().postTemplate(param);
            jsonView.success(ret);
        } catch (Exception e) {
            e.printStackTrace();
            jsonView.fail(e.getMessage());
        }
        return jsonView;
    }
}
